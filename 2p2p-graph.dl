.type id = number

// OP
.decl addVertex(U: id)
.decl removeVertex(U: id)
.decl addEdge(U: id, V: id)
.decl removeEdge(U: id, V: id)

// Example
addVertex(1).
addVertex(2).
addVertex(3).
addVertex(4).
addEdge(1,2).
addEdge(2,3).
addEdge(2,4).
removeVertex(2).
addVertex(5).
addEdge(3,4).
addEdge(3,5).
addEdge(4,5).
removeEdge(3,5).
removeVertex(1).
addEdge(1,5).

// Removal rules
removeEdge(U,V) :- addEdge(U,V), removeVertex(U).
removeEdge(V,U) :- addEdge(V,U), removeVertex(U).

// Query
.decl vertex(U: id)
vertex(U) :- addVertex(U), ! removeVertex(U).

.decl edge(U: id, V: id)
edge(U,V) :- vertex(U), vertex(V), addEdge(U,V), ! removeEdge(U,V).

.output vertex(IO=stdout)
.output edge(IO=stdout)
